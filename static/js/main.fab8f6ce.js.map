{"version":3,"file":"static/js/main.fab8f6ce.js","mappings":"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","sources":["sections/Section.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\n\nconst Section = ({ id, title, text, image, isMobile }) => {\n  return (\n    <View style={[styles.container, isMobile && styles.mobileContainer]} id={id}>\n      <Image source={image} style={[styles.image, isMobile && styles.mobileImage]} />\n      <View style={styles.textContainer}>\n        <Text style={styles.title}>{title}</Text>\n        <Text style={styles.text}>{text}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '100vh',\n  },\n  mobileContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  image: {\n    width: '50vw', // Adjust the width as needed\n    height: 200, // Adjust the height as needed\n    resizeMode: 'cover',\n    borderRadius: 5,\n  },\n  mobileImage: {\n    width: '100%',\n  },\n  textContainer: {\n    width: '50vw', // Adjust the width as needed\n    paddingHorizontal: 10,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  text: {\n    fontSize: 16,\n  },\n});\n\nexport default Section;","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport Section from './sections/Section';\n\nexport default function App() {\n  const isMobile = useMediaQuery({ maxWidth: 767 }); // Use 767px as a breakpoint for mobile view\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  const sectionsData = [\n    {\n      id: 1,\n      title: 'Motores',\n      text: 'Todas las marcas',\n      image: require('./assets/logo.png'),\n    },\n    {\n      id: 2,\n      title: 'Refacciones',\n      text: 'Los mejores precios',\n      image: require('./assets/logo.png'),\n    },\n    {\n      id: 3,\n      title: 'Accesorios',\n      text: 'La mejor variedad',\n      image: require('./assets/logo.png'),\n    },\n  ];\n\n  const scrollToSection = (sectionId) => {\n    const yOffset = -80; // Adjust this offset if needed to offset the height of the fixed navbar\n    const sectionElement = document.getElementById(sectionId);\n    if (sectionElement) {\n      const y = sectionElement.getBoundingClientRect().top + window.pageYOffset + yOffset;\n      window.scrollTo({ top: y, behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <View style={styles.navbar}>\n          <Image source={require('./assets/logo.png')} style={styles.logo} />\n          {isMobile ? (\n            <>\n              {isMenuOpen && (\n                <View style={styles.menu}>\n                  <TouchableOpacity\n                    style={styles.menuItem}\n                    onPress={() => {\n                      setMenuOpen(false);\n                      scrollToSection('section1');\n                    }}\n                  >\n                    <Text style={styles.menuItemText}>Motores</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.menuItem}\n                    onPress={() => {\n                      setMenuOpen(false);\n                      scrollToSection('section2');\n                    }}\n                  >\n                    <Text style={styles.menuItemText}>Refacciones</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.menuItem}\n                    onPress={() => {\n                      setMenuOpen(false);\n                      scrollToSection('section3');\n                    }}\n                  >\n                    <Text style={styles.menuItemText}>Accesorios</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n              <TouchableOpacity\n                style={styles.menuButton}\n                onPress={() => setMenuOpen((prev) => !prev)}\n              >\n                <Text style={styles.menuButtonText}>Menu</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <View style={styles.menu}>\n              <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => scrollToSection('section1')}\n              >\n                <Text style={styles.menuItemText}>Motores</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => scrollToSection('section2')}\n              >\n                <Text style={styles.menuItemText}>Refacciones</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.menuItem}\n                onPress={() => scrollToSection('section3')}\n              >\n                <Text style={styles.menuItemText}>Accesorios</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n        {isMobile ? (\n          <>\n            {sectionsData.map((section) => (\n              <Section\n                key={section.id}\n                id={`section${section.id}`}\n                title={section.title}\n                text={section.text}\n                image={section.image}\n                isMobile={true}\n              />\n            ))}\n          </>\n        ) : (\n          <View style={styles.webLayout}>\n            {sectionsData.map((section) => (\n              <View key={section.id} style={styles.webRow}>\n                <View style={styles.webColumn}>\n                  <Section\n                    id={`section${section.id}`}\n                    title={section.title}\n                    text={section.text}\n                    image={section.image}\n                    isMobile={false}\n                  />\n                </View>\n              </View>\n            ))}\n          </View>\n        )}\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingTop: 40,\n  },\n  navbar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  logo: {\n    width: 100, // Adjust the width of the logo as needed\n    height: 40, // Adjust the height of the logo as needed\n  },\n  menuButton: {\n    backgroundColor: '#f2f2f2',\n    padding: 10,\n    borderRadius: 5,\n  },\n  menuButtonText: {\n    fontSize: 16,\n  },\n  menu: {\n    flexDirection: 'row',\n    marginTop: 10,\n  },\n  menuItem: {\n    padding: 10,\n    marginLeft: 10,\n    display: 'inline-block',\n  },\n  menuItemText: {\n    fontSize: 16,\n  },\n  webLayout: {\n    gap: '20px',\n  },\n  webRow: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: '20px',\n  },\n  webColumn: {\n    width: '50vw',\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useRef } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport  styled from 'styled-components';\nimport { Carousel } from 'react-responsive-carousel';\nimport { Link, Element } from 'react-scroll'; // Import Link and Element from react-scroll\n\n\nexport default function App() {\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 900 });\n\n  const scrollViewRef = useRef(null);\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'flex-start', // Start from the top of the screen\n      alignItems: 'center',\n      backgroundColor: '#f0f0f0',\n    },\n    navbar: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      backgroundColor: '#007bff',\n      padding: 16,\n      display: 'flex',\n      justifyContent: 'space-between',\n      //lignItems: 'center',\n      zIndex: 1,\n      maxHeight: isMobile ? (isMenuVisible ? '100vh' : '20%') : 'unset', // Set max height to 20% for mobile version and 100vh when the menu is visible\n    },\n    logo: {\n      width: 200,\n      height: 40, // Adjust height for the logo in the navbar\n    },\n    navbarList: {\n      display: 'flex',\n      justifyContent: isMobile ? 'space-between' : 'flex-end', // Align menu items differently in mobile and web versions\n      alignItems: 'center',\n      flexGrow: isMobile ? 1 : 0, // Allow menu items to take full width in mobile version\n    },\n    navbarItem: {\n      margin: 8,\n      color: '#fff',\n      textDecoration: 'none',\n      display: isMobile ? (isMenuVisible ? 'block' : 'none') : 'block', // Show menu items in mobile version when the menu is visible\n    },\n    menuButtonContainer: {\n      display: 'none',\n    },\n    menuButtonContainerMobile: {\n      display: 'block',\n    },\n    menuButton: {\n      color: '#fff',\n      fontSize: 24,\n      cursor: 'pointer',\n    },\n    showMenu: {\n      display: 'block',\n    },\n    gridContainer: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(1, 50vw)', // 2 columns, each taking 50vw width\n      gap: '16px',\n      width: '80%',\n      maxWidth: 800,\n      margin: '0 auto',\n      marginTop: isMobile ? 0 : '20%', // Add marginTop for the web version to start below the navbar\n    },\n    gridContainerMobile: {\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gap: '16px',\n      width: '100vw', // Adjust width to 100vw for the mobile version\n      maxWidth: 400, // Set a maximum width for a better mobile layout\n      margin: '0 auto',\n      marginTop: '20%', // Add marginTop for the mobile version to start below the navbar\n    },\n    imageContainer: {\n      aspectRatio: '4/3',\n      width: '50%',\n      borderRadius: 8,\n    },\n    imageContainerMobile: {\n      aspectRatio: '9/16',\n      width: '100%',\n      borderRadius: 8,\n      marginBottom: 16,\n    },\n    sectionContainer: {\n      height: '100vh', // Set 100vh height for both mobile and web versions\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom: 32, // Add margin bottom for both versions\n    },\n    title: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 16,\n    },\n    description: {\n      fontSize: 18,\n    },\n    button: {\n      padding: 12,\n      paddingHorizontal: 24,\n      backgroundColor: '#007bff',\n      borderRadius: 8,\n    },\n    buttonText: {\n      color: '#fff',\n      fontSize: 18,\n      fontWeight: 'bold',\n    },\n\n    // Additional styles for responsiveness\n    '@media screen and (max-width: 900px)': {\n      navbarList: {\n        display: isMenuVisible ? 'block' : 'none', // Show/hide menu items in the mobile version when the hamburger button is clicked\n      },\n      menuButtonContainer: {\n        display: 'block',\n      },\n      showMenu: {\n        display: 'none',\n      },\n      gridContainer: {\n        gridTemplateColumns: '1fr', // Single column layout for mobile version\n        width: '100vw', // Adjust width to 100vw for the mobile version\n      },\n    },\n        // Add the following styles for the two-column layout in web version\n        '@media screen and (min-width: 900px)': {\n          gridContainer: {\n            gridTemplateColumns: '1fr 1fr', // Set two columns with equal width\n          },\n          sectionContainer: {\n            width: '50vw', // Set the section width to 50vw for each column\n          },\n        },\n  });\n\n  const handleButtonPress = () => {\n    console.log('Button pressed!');\n    // Add navigation logic here if needed\n  };\n\n  const handleMenuToggle = () => {\n    setIsMenuVisible(!isMenuVisible);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.navbar}>\n        <Image style={styles.logo} source={require('./assets/logo.png')} />\n        {isMobile ? (\n          <TouchableOpacity style={styles.menuButtonContainerMobile} onPress={handleMenuToggle}>\n            <Text style={styles.menuButton}>{isMenuVisible ? '✕' : '☰'}</Text>\n          </TouchableOpacity>\n        ) : (\n          <ul style={styles.navbarList}>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section1\"\n                spy={true}\n                smooth={true}\n                offset={-70} // Offset to adjust for the fixed navbar height\n                duration={500}\n              >\n                Section 1\n              </Link>\n            </li>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section2\"\n                spy={true}\n                smooth={true}\n                offset={-70}\n                duration={500}\n              >\n                Section 2\n              </Link>\n            </li>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section3\"\n                spy={true}\n                smooth={true}\n                offset={-70}\n                duration={500}\n              >\n                Section 3\n              </Link>\n            </li>\n          </ul>\n        )}\n        {isMobile && isMenuVisible && (\n          <ul style={styles.navbarList}>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section1\"\n                spy={true}\n                smooth={true}\n                offset={-70}\n                duration={500}\n              >\n                Section 1\n              </Link>\n            </li>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section2\"\n                spy={true}\n                smooth={true}\n                offset={-70}\n                duration={500}\n              >\n                Section 2\n              </Link>\n            </li>\n            <li style={styles.navbarItem}>\n              <Link\n                activeClass=\"active\"\n                to=\"section3\"\n                spy={true}\n                smooth={true}\n                offset={-70}\n                duration={500}\n              >\n                Section 3\n              </Link>\n            </li>\n          </ul>\n        )}\n      </View>\n      <ScrollView ref={scrollViewRef} contentContainerStyle={isMobile ? styles.gridContainerMobile : styles.gridContainer}>\n        <Element name=\"section1\">\n          <View style={isMobile ? styles.imageContainerMobile : styles.imageContainer}>\n            <Image source={require('./assets/logo.png')} style={styles.imageContainer} />\n          </View>\n          <View style={styles.sectionContainer}>\n            <Text style={styles.title}>Section 1</Text>\n            <Text style={styles.description}>Content of section 1...</Text>\n          </View>\n        </Element>\n\n        <Element name=\"section2\">\n          <View style={isMobile ? styles.imageContainerMobile : styles.imageContainer}>\n            <Image source={require('./assets/logo.png')} style={styles.imageContainer} />\n          </View>\n          <View style={styles.sectionContainer}>\n            <Text style={styles.title}>Section 2</Text>\n            <Text style={styles.description}>Content of section 2...</Text>\n          </View>\n        </Element>\n\n        <Element name=\"section3\">\n          <View style={isMobile ? styles.imageContainerMobile : styles.imageContainer}>\n            <Image source={require('./assets/logo.png')} style={styles.imageContainer} />\n          </View>\n          <View style={styles.sectionContainer}>\n            <Text style={styles.title}>Section 3</Text>\n            <Text style={styles.description}>Content of section 3...</Text>\n          </View>\n        </Element>\n      </ScrollView>\n      <TouchableOpacity style={styles.button} onPress={handleButtonPress}>\n        <Text style={styles.buttonText}>Get Started</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};*/\n\n\n   \n\n\n\n/*import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport  styled from 'styled-components';\nimport { Carousel } from 'react-responsive-carousel';\n\nexport default function App() {\n\n  const isMobile = useMediaQuery({ maxWidth: 900 });\n  const handleButtonPress = () => {\n    console.log('Button pressed!');\n    // Add navigation logic here if needed\n  };\n\n  const carouselImages = [\n    require('./assets/logo.png'),\n    require('./assets/logo.png'),\n    require('./assets/logo.png'),\n  ];\n\n  return (\n    <View style={styles.container}>\n      {isMobile ? (\n        <>\n          <Image style={styles.logo} source={require('./assets/logo.png')} />\n          <Text style={styles.title}>AutoParts App</Text>\n          <Text style={styles.description}>Welcome to the AutoParts app. Find the best parts for your vehicle.</Text>\n          <TouchableOpacity style={styles.button} onPress={handleButtonPress}>\n            <Text style={styles.buttonText}>Get Started</Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <View>\n          <Carousel\n            data={carouselImages}\n            renderItem={({ item }) => (\n              <View style={styles.carouselContainer}>\n                <Image source={item} style={styles.carouselImage} />\n              </View>\n            )}\n            sliderWidth={300}\n            itemWidth={300}\n            loop\n            autoplay\n            autoplayDelay={2000}\n            autoplayInterval={3000}\n          />\n          <Text style={styles.title}>AutoParts App</Text>\n          <Text style={styles.description}>Welcome to the AutoParts app. Find the best parts for your vehicle.</Text>\n        </View>\n      )}\n    </View>\n  );\n\n  /*const handleButtonPress = () => {\n    console.log('Button pressed!');\n    // Add navigation logic here if needed\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image style={styles.logo} source={require('./assets/logo.png')} />\n      <Text style={styles.title}>Nuestra nueva App</Text>\n      <Text style={styles.description}>En construcción de nuestra nueva App, para que encuentres la mejor pieza para tu motor.</Text>\n      <TouchableOpacity style={styles.button} onPress={handleButtonPress}>\n        <Text style={styles.buttonText}>Entrar</Text>\n      </TouchableOpacity>\n    </View>\n  );*/\n\n\n\n\n\n  /*const Container = styled(View)`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  background-color: #f0f0f0;\n`;\n\nconst Title = styled(Text)`\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nconst Description = styled(Text)`\n  font-size: 18px;\n  margin-bottom: 32px;\n`;\n\nconst Logo = styled(Image)`\n  width: 200px;\n  height: 200px;\n  margin-bottom: 32px;\n`;\n\nconst Button = styled(TouchableOpacity)`\n  padding: 12px 24px;\n  background-color: #007bff;\n  border-radius: 8px;\n`;\n\nconst ButtonText = styled(Text)`\n  color: #fff;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\n\n  const handleButtonPress = () => {\n    console.log('Button pressed!');\n    // Add navigation logic here if needed\n  };\n\n  return (\n    <Container>\n      <Logo source={require('./assets/logo.png')} />\n      <Title>AutoParts App</Title>\n      <Description>Welcome to the AutoParts app. Find the best parts for your vehicle.</Description>\n      <Button onPress={handleButtonPress}>\n        <ButtonText>Get Started</ButtonText>\n      </Button>\n    </Container>\n  );*/\n\n\n  /*const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n  const isBigScreen = useMediaQuery({ query: '(min-device-width: 1824px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: '(max-device-width: 1224px)'\n  })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\n\n  return (\n    <div>\n      <h1>Device Test!</h1>\n      {isDesktopOrLaptop && <>\n        <p>You are a desktop or laptop</p>\n        {isBigScreen && <p>You also have a huge screen</p>}\n        {isTabletOrMobile && <p>You are sized like a tablet or mobile phone though</p>}\n      </>}\n      {isTabletOrMobileDevice && <p>You are a tablet or mobile phone</p>}\n      <p>Your are in {isPortrait ? 'portrait' : 'landscape'} orientation</p>\n      {isRetina && <p>You are retina</p>}\n    </div>\n  )*/\n\n\n\n\n\n\n\n\n\n  /*const isTabletOrMobileDevice = useMediaQuery({    \n    maxDeviceWidth: 1224,\n    // alternatively...\n    query: \"(max-device-width: 1224px)\"  \n  });\n  if (isTabletOrMobileDevice) {\n    return (<Text>Hi Mobile Users 👋</Text>)\n  }\n  return (<Text>👋 Hello Desktop People</Text>)*/\n  \n  /*return (\n    /*<View style={styles.container}>\n      <Text>HOCAR</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n    \n  );\n   \n  \n}\n\n/*const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  description: {\n    fontSize: 18,\n    marginBottom: 32,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 32,\n  },\n  button: {\n    padding: 12,\n    paddingHorizontal: 24,\n    backgroundColor: '#9ACD32',\n    borderRadius: 8,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  carouselContainer: {\n    width: '80%',\n    maxWidth: 800,\n    alignSelf: 'center',\n  },\n  carouselImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n  },\n});*/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [307], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","marginBottom","display","flexDirection","alignItems","height","mobileContainer","image","width","resizeMode","borderRadius","mobileImage","textContainer","paddingHorizontal","paddingTop","title","fontSize","fontWeight","text","_ref","id","isMobile","_jsxs","View","style","children","_jsx","Image","source","Text","App","useMediaQuery","maxWidth","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","sectionsData","require","scrollToSection","sectionId","sectionElement","document","getElementById","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","SafeAreaView","ScrollView","navbar","logo","_Fragment","menu","TouchableOpacity","menuItem","onPress","menuItemText","menuButton","prev","menuButtonText","map","section","Section","webLayout","webRow","webColumn","StatusBar","flex","backgroundColor","justifyContent","padding","marginTop","marginLeft","gap","gridTemplateColumns","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}